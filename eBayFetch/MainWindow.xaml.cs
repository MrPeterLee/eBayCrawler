using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Microsoft.Windows.Controls.Ribbon;
using System.Configuration;
using eBay.Service.Call;
using eBay.Service.Core.Sdk;
using eBay.Service.Core.Soap;
using System.Net;
using System.Collections;
using System.ComponentModel;
using System.Xml;
using eBay.Service.Util;
using Samples.Helper;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.Data.Objects;
using System.IO;
using System.Windows.Threading;

namespace eBayFetch
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public ApiContext Context;
        eBayFetchSQLEntities dataEntities = new eBayFetchSQLEntities();

        int maxAccount = 8;
        int accountNum = 0;

        int pictureNumber = 0;
        int debug = 0;
        private ItemType fetchedItem;

        DispatcherTimer AutoFetchTimer = new DispatcherTimer();
        DispatcherTimer SearchTimer = new DispatcherTimer();
        DispatcherTimer timer3 = new DispatcherTimer();
        DispatcherTimer timer4 = new DispatcherTimer();
        DispatcherTimer timer5 = new DispatcherTimer();
        DispatcherTimer timer6 = new DispatcherTimer();
        DispatcherTimer timer7 = new DispatcherTimer();
        DispatcherTimer timer8 = new DispatcherTimer();
        DispatcherTimer timer9 = new DispatcherTimer();
        DispatcherTimer AutoFetchTimer0 = new DispatcherTimer();

        int AutoFetchTimerSecs;
        int SearchTimerSecs;
        string accD, accA, accC, accT;
        string pathItem;

        public MainWindow()
        {
            InitializeComponent();
            // 
            // Insert code required on object creation below this point.
        }

        private void RibbonWindow_Loaded(object sender, RoutedEventArgs e)
        {

            // Initialize eBay ApiContext
            //SwitchAccountFn();
            if (Context == null)
            {
                /* Default Context Settings
                Context = AppSettingHelper.GetApiContext();
                Context.ApiLogManager = new ApiLogManager();
                Context.ApiLogManager.ApiLoggerList.Add(new eBay.Service.Util.FileLogger("Log.txt", false, false, false));
                Context.ApiLogManager.EnableLogging = false;
                Context.Site = eBay.Service.Core.Soap.SiteCodeType.US;                
                */
                Context = GetContext();

            }

            LoadDebug();

            // Initialize the Preliminary Search DataGrid
            reloadPreDataGrid();
            // Initialize the Item DataGrid
            reloadItemDataGrid();
            // Initialize the User DataGrid
            reloadUserDataGrid();
            // Initialize the Panel DataGrid
            reloadPanelDataGrid();

            // Initialize the welcome webcontrol
            webMain.Navigate(new Uri("https://dl.dropboxusercontent.com/u/48498612/eBayAutoFetchRobot.htm", UriKind.RelativeOrAbsolute));
            GetEnvironmentInfo();

            // AutoStart AutoFetch Function
            // StartAutoFetchFn();

        }


        private void Exit_Click(object sender, RoutedEventArgs e)
        {
            Application.Current.Shutdown();
        }

        private void BtnStage1_Click(object sender, RoutedEventArgs e)
        {
            Stage1Fn();
        }


        private void GetCategorySearch_Click(object sender, RoutedEventArgs e)
        {
            if (CategoryIDListBOx.Items.Count > 0)
            {
                foreach (string defaultSearch in defaultSearches)
                {
                    TxtSearchTerm.Text = defaultSearch;
                    Log("Current search category is " + defaultSearch);

                    GetCategoryListings(defaultSearch);
                    DelDuplicateS1Data();
                }
                reloadPreDataGrid();
                TabCGridData.SelectedIndex = 1;
            }
            else
                MessageBox.Show("Please add at least one Cateogry ID in the \n      Search Queue.");
        }

        private void BtnFetchSingle_Click(object sender, RoutedEventArgs e)
        {
            if (TxtItemTerm.Text.Length > 0)
            {
                // WARNING: CHANGED THE FOLLOWING SETTING
                //GetItemInfoFn(TxtItemTerm.Text);
                GetItemInfoFnS4(TxtItemTerm.Text);
                //reloadItemDataGrid();

                reloadPreDataGrid();
                reloadItemDataGrid();
                reloadUserDataGrid();
                reloadPanelDataGrid();

                TabCGridData.SelectedIndex = 1;
            }
            else
                MessageBox.Show("Please enter an auction item number into the search box in \n      Menu tab `Fetch Item Info`.");

        }

        public ItemType getItem()
        {
            return fetchedItem;
        }

        private void BtnFetchUser_Click(object sender, RoutedEventArgs e)
        {
            FetchUserFn(TxtUserTerm.Text);
            TabCGridData.SelectedIndex = 4;
            reloadUserDataGrid();
        }


        private void BtnDeleteAllData_Click(object sender, RoutedEventArgs e)
        {
            //            MessageBox.Show("Warning:\n All data will be permanently removed!")
            // Delete all data
            DeleteS1Data();
            DeleteS2Data();
            DeleteS3Data();
            DeleteS4Data();
            reloadPreDataGrid();
            reloadItemDataGrid();
            reloadUserDataGrid();
            reloadPanelDataGrid();
        }

        private void BtnAutoFetch_Click(object sender, RoutedEventArgs e)
        {
            StartAutoFetchFn();

        }

        private void StartAutoFetchFn()
        {
            //AutoFetchFn();
            //BtnAutoFetch.IsEnabled = false;
            //BtnStopAutoFetch.IsEnabled = true;
            BtnAutoFetch.Visibility = Visibility.Collapsed;
            BtnStopAutoFetch.Visibility = Visibility.Visible;

            AutoFetchTimerSecs = 3800;
            // Setting a timer: AutoFetchTimer
            AutoFetchTimer.Tick += new EventHandler(AutoFetchTimer_Tick1);
            AutoFetchTimer.Interval = new TimeSpan(0, 0, 1);
            AutoFetchTimer.Start();

            SearchTimerSecs = 10;
            // Setting a timer: SearchTimer
            SearchTimer.Tick += new EventHandler(SearchTimer_Tick1);
            SearchTimer.Interval = new TimeSpan(0, 0, 1);
            SearchTimer.Start();
        }

        private void BtnDelSearchData_Click(object sender, RoutedEventArgs e)
        {
            DeleteS1Data();
            reloadPreDataGrid();
        }

        private void BtnDelItemData_Click(object sender, RoutedEventArgs e)
        {
            DeleteS2Data();
            reloadItemDataGrid();
        }

        private void BtnDelUserData_Click(object sender, RoutedEventArgs e)
        {
            DeleteS3Data();
            reloadUserDataGrid();
        }

        private void BtnDelDuplicateS1_Click(object sender, RoutedEventArgs e)
        {
            DelDuplicateS1Data();
            reloadPreDataGrid();
        }

        private void BtnDelDuplicateS2_Click(object sender, RoutedEventArgs e)
        {
            DelDuplicateS2Data();
            reloadItemDataGrid();

        }

        private void BtnDelDupAllData_Click(object sender, RoutedEventArgs e)
        {
            DelDuplicateS1Data();
            reloadPreDataGrid();
            DelDuplicateS2Data();
            reloadItemDataGrid();
            DelDuplicateS4Data();
            reloadPanelDataGrid();
        }

        private void BtnStage2_Click(object sender, RoutedEventArgs e)
        {
            Stage2Fn();
        }

        private void BtnStage3_Click(object sender, RoutedEventArgs e)
        {
            Log("This function has been removed.");
        }

        private void BtnExportAll_Click(object sender, RoutedEventArgs e)
        {
            MessageBox.Show("This feature is under development. \n At this momemnt you can: \n Select All Data --> Copy and Paste to Excel");
            //ExportFn();
        }

        private void BtnRefreshCount_Click(object sender, RoutedEventArgs e)
        {
            //countRequest();
            GetAPICallsNumber();
        }


        
        public void Log(string sLogLine)
        {
            TxtOutput.Items.Insert(0, DateTime.Now.ToShortDateString() +
                        " " + DateTime.Now.ToShortTimeString() + " Log " + " : " +
                        sLogLine);

            if (TxtOutput.Items.Count > 1000)
            {
                TxtOutput.Items.Clear();
            }

        }


        private void BtnStopCategorySearch_Click(object sender, System.Windows.RoutedEventArgs e)
        {
            //BtnAutoFetch.IsEnabled = true;
            //BtnStopAutoFetch.IsEnabled = false;

            BtnAutoFetch.Visibility = Visibility.Visible;
            BtnStopAutoFetch.Visibility = Visibility.Collapsed;

            // stop AutoFetchTimer
            AutoFetchTimer.Stop();

            // Stop SearchTimer
            SearchTimer.Stop();

            Log("Auto Fetch countdown aborted.");
        }

        private void MainGridSplitter_MouseEnter(object sender, MouseEventArgs e)
        {
            RectangleSplitter.Opacity = 1; // Show rectangle
        }

        private void MainGridSplitter_MouseLeave(object sender, MouseEventArgs e)
        {
            RectangleSplitter.Opacity = 0; // Hide rectangle
        }

        private void GetAPICallsNumber()
        {
            try
            {
                GetApiAccessRulesCall apicall = new GetApiAccessRulesCall(GetContext());
                ApiAccessRuleTypeCollection rules = apicall.GetApiAccessRules();
                int i = 1;
                foreach (ApiAccessRuleType rule in rules)
                {
                    string[] listparams = new string[8];
                    listparams[0] = rule.CallName;
                    listparams[1] = rule.HourlySoftLimit.ToString();
                    listparams[2] = rule.HourlyHardLimit.ToString();
                    listparams[3] = rule.HourlyUsage.ToString();
                    listparams[4] = rule.DailySoftLimit.ToString();
                    listparams[5] = rule.DailyHardLimit.ToString();
                    listparams[6] = rule.DailyUsage.ToString();
                    listparams[7] = rule.CountsTowardAggregate.ToString();

                    /*
                    Log("Get API Access Rules Call Name: " + listparams[0] + ", Aggregate Count : " + listparams[7]);
                    Log("Hourly Usage :" + listparams[3] + ", Hourly Soft Limit: " + listparams[1] + ", Hourly Hard Limit: " + listparams[2]);
                    Log("Daily Usage :" + listparams[6] + ", Daily Soft Limit :" + listparams[4] + ", Daily Hard Limit :" + listparams[5]);
                     */
                    if (i == 1 & accountNum == 1 + 1)
                    {
                        TxtAcc1Usage.Content = "Account1 - " + listparams[6];
                    }
                    if (i == 1 & accountNum == 2 + 1)
                    {
                        TxtAcc2Usage.Content = "Account2 - " + listparams[6];
                    }
                    i = i + 1;
                }
            }

            catch (Exception ex)
            {
                Log(ex.Message);
            }

        }

        private void GetItemSpecificsFn(string itemID)
        {
            GetItemCall apicall = new GetItemCall(GetContext());
            apicall.DetailLevelList.Add(DetailLevelCodeType.ItemReturnAttributes);
            fetchedItem = apicall.GetItem(itemID);

            AttributeSetTypeCollection fuckit = fetchedItem.AttributeSetArray;
            for (int i = 0; fuckit != null && i < fuckit.Count; i++)
            {
                AttributeSetType theSet = fuckit[i];
                Log("The attributeSet ID for the item " + itemID + " is: " + theSet.attributeSetID.ToString());

                getCarAttr(theSet, fetchedItem);

            }

        }

        private void BtnTest_Click(object sender, RoutedEventArgs e)
        {
            /*
            Stage3Fn();

            reloadPreDataGrid();
            reloadItemDataGrid();
            reloadUserDataGrid();
            reloadPanelDataGrid();
             */
            FetchBiddersFn("110629503881");
        }

        private void BtnFetchAttributeID_Click(object sender, RoutedEventArgs e)
        {
            GetItemSpecificsFn(TxtItemTerm.Text);
        }

        public class ParentCategoryData
        {
            public string CategoryID { get; set; }
            public string Level { get; set; }
            public string Name { get; set; }
            public string ParentID { get; set; }
            public string LeafCategory { get; set; }
        };

        private void BtnFetchParentCatID_Click(object sender, RoutedEventArgs e)
        {

        }


        private void BtnAccountSwitch_Click(object sender, RoutedEventArgs e)
        {
            //SwitchAccountFn();
        }


        //private void SwitchAccountFn()
        //{
        //    accountNum = accountNum + 1;
        //    if (accountNum == 0) accountNum = 1;
        //    if (accountNum > maxAccount) accountNum = 1;

        //    BtnAccountSwitch.Label = "Use Account " + accountNum.ToString();

        //}

        private void BtnAddIDtoSearchQueue_Click(object sender, RoutedEventArgs e)
        {
            if (TxtSearchTerm.Text.ToString() != null)
                CategoryIDListBOx.Items.Add(TxtSearchTerm.Text.ToString());

            defaultSearches.Add(Convert.ToString(TxtSearchTerm.Text));
            TxtSearchTerm.Text = null;

        }

        private void BtnClearSearchQueue_Click(object sender, RoutedEventArgs e)
        {
            defaultSearches.Clear();
            CategoryIDListBOx.Items.Clear();
        }

        private void testEbayCalls(object sender, RoutedEventArgs e)
        {

            string ItemString = "111379296672";
            string addContent = "";
            // create a file to write to
            string pathItem = @"d:\temp\testCalls.txt";
            // This text is added only once to the file. 
            if (!File.Exists(pathItem))
            {
                // Create a file to write to. 
                using (StreamWriter sw = File.CreateText(pathItem))
                {
                    sw.WriteLine("This file is used to test individual ebay call to see if they work properly...");
                }
            }











using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ApplicationData + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ApplicationData; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ApplyBuyerProtection.BuyerProtectionSource + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ApplyBuyerProtection != null) addContent = addContent + "," + fetchedItem.ApplyBuyerProtection.BuyerProtectionSource; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ApplyBuyerProtection.BuyerProtectionStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ApplyBuyerProtection != null) addContent = addContent + "," + fetchedItem.ApplyBuyerProtection.BuyerProtectionStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .AttributeSetArray + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.AttributeSetArray; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .AutoPay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.AutoPay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BestOfferDetails.BestOfferCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BestOfferDetails != null) addContent = addContent + "," + fetchedItem.BestOfferDetails.BestOfferCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BestOfferDetails.BestOfferEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BestOfferDetails != null) addContent = addContent + "," + fetchedItem.BestOfferDetails.BestOfferEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BestOfferDetails.NewBestOffer + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BestOfferDetails != null) addContent = addContent + "," + fetchedItem.BestOfferDetails.NewBestOffer; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.AdditionalContactInformation + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.AdditionalContactInformation; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 




using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.Email + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.Email; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.Fax + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.Fax; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.LegalInvoice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.LegalInvoice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.TermsAndConditions + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.TermsAndConditions; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BusinessSellerDetails.TradeRegistrationNumber + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BusinessSellerDetails != null) addContent = addContent + "," + fetchedItem.BusinessSellerDetails.TradeRegistrationNumber; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 








using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerGuaranteePrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.BuyerGuaranteePrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerProtection + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.BuyerProtection; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerRequirementDetails.LinkedPayPalAccount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BuyerRequirementDetails != null) addContent = addContent + "," + fetchedItem.BuyerRequirementDetails.LinkedPayPalAccount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 












using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerRequirementDetails.MinimumFeedbackScore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BuyerRequirementDetails != null) addContent = addContent + "," + fetchedItem.BuyerRequirementDetails.MinimumFeedbackScore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerRequirementDetails.ShipToRegistrationCountry + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BuyerRequirementDetails != null) addContent = addContent + "," + fetchedItem.BuyerRequirementDetails.ShipToRegistrationCountry; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 




using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerRequirementDetails.ZeroFeedbackScore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.BuyerRequirementDetails != null) addContent = addContent + "," + fetchedItem.BuyerRequirementDetails.ZeroFeedbackScore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyerResponsibleForShipping + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.BuyerResponsibleForShipping; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .BuyItNowPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.BuyItNowPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.CharityID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.CharityID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.CharityName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.CharityName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.CharityNumber + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.CharityNumber; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.DonationPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.DonationPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.LogoURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.LogoURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.Mission + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.Mission; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Charity.Status + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Charity != null) addContent = addContent + "," + fetchedItem.Charity.Status; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ConditionDescription + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ConditionDescription; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ConditionDisplayName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ConditionDisplayName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ConditionID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ConditionID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Country + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Country; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossBorderTrade + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.CrossBorderTrade; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.ItemID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.ItemID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.PrimaryScheme + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.PrimaryScheme; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.PromotedItem + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.PromotedItem; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.PromotionMethod + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.PromotionMethod; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.SellerID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.SellerID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .CrossPromotion.ShippingDiscount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.CrossPromotion != null) addContent = addContent + "," + fetchedItem.CrossPromotion.ShippingDiscount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Currency + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Currency; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Description + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Description; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DisableBuyerRequirements + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.DisableBuyerRequirements; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.MadeForOutletComparisonPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.MadeForOutletComparisonPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.MinimumAdvertisedPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.MinimumAdvertisedPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.MinimumAdvertisedPriceExposure + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.MinimumAdvertisedPriceExposure; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.OriginalRetailPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.OriginalRetailPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.PricingTreatment + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.PricingTreatment; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.SoldOffeBay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.SoldOffeBay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DiscountPriceInfo.SoldOneBay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.DiscountPriceInfo.SoldOneBay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .DispatchTimeMax + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.DispatchTimeMax; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .eBayNowAvailable + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.eBayNowAvailable; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ExtendedSellerContactDetails.ClassifiedAdContactByEmailEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ExtendedSellerContactDetails != null) addContent = addContent + "," + fetchedItem.ExtendedSellerContactDetails.ClassifiedAdContactByEmailEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 













using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .FreeAddedCategory.CategoryID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.FreeAddedCategory != null) addContent = addContent + "," + fetchedItem.FreeAddedCategory.CategoryID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .FreeAddedCategory.CategoryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.FreeAddedCategory != null) addContent = addContent + "," + fetchedItem.FreeAddedCategory.CategoryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .GetItFast + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.GetItFast; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .GiftIcon + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.GiftIcon; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .GiftServices + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.GiftServices; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .HideFromSearch + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.HideFromSearch; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .HitCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.HitCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .HitCounter + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.HitCounter; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .IntegratedMerchantCreditCardEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.IntegratedMerchantCreditCardEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .InventoryTrackingMethod + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.InventoryTrackingMethod; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .IsIntermediatedShippingEligible + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.IsIntermediatedShippingEligible; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemCompatibilityCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ItemCompatibilityCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemCompatibilityList.Compatibility.CompatibilityNotes + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemCompatibilityList.Compatibility != null) addContent = addContent + "," + fetchedItem.ItemCompatibilityList.Compatibility.CompatibilityNotes; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemCompatibilityList.Compatibility.NameValueList.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemCompatibilityList.Compatibility.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemCompatibilityList.Compatibility.NameValueList.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemCompatibilityList.Compatibility.NameValueList.Source + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemCompatibilityList.Compatibility.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemCompatibilityList.Compatibility.NameValueList.Source; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemCompatibilityList.Compatibility.NameValueList.Value + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemCompatibilityList.Compatibility.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemCompatibilityList.Compatibility.NameValueList.Value; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 






using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ItemID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemPolicyViolation.PolicyID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemPolicyViolation != null) addContent = addContent + "," + fetchedItem.ItemPolicyViolation.PolicyID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemPolicyViolation.PolicyText + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemPolicyViolation != null) addContent = addContent + "," + fetchedItem.ItemPolicyViolation.PolicyText; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 



//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemSpecifics.NameValueList.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemSpecifics.NameValueList.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemSpecifics.NameValueList.Source + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemSpecifics.NameValueList.Source; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ItemSpecifics.NameValueList.Value + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ItemSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.ItemSpecifics.NameValueList.Value; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 





using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingCheckoutRedirectPreference.ProStoresStoreName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingCheckoutRedirectPreference != null) addContent = addContent + "," + fetchedItem.ListingCheckoutRedirectPreference.ProStoresStoreName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingCheckoutRedirectPreference.SellerThirdPartyUsername + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingCheckoutRedirectPreference != null) addContent = addContent + "," + fetchedItem.ListingCheckoutRedirectPreference.SellerThirdPartyUsername; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDesigner.LayoutID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDesigner != null) addContent = addContent + "," + fetchedItem.ListingDesigner.LayoutID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDesigner.OptimalPictureSize + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDesigner != null) addContent = addContent + "," + fetchedItem.ListingDesigner.OptimalPictureSize; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDesigner.ThemeID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDesigner != null) addContent = addContent + "," + fetchedItem.ListingDesigner.ThemeID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.Adult + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.Adult; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.BestOfferAutoAcceptPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.BestOfferAutoAcceptPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.BindingAuction + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.BindingAuction; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.BuyItNowAvailable + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.BuyItNowAvailable; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.CheckoutEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.CheckoutEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.ConvertedBuyItNowPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.ConvertedBuyItNowPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.ConvertedReservePrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.ConvertedReservePrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.ConvertedStartPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.ConvertedStartPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.EndingReason + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.EndingReason; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.EndTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.EndTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.HasPublicMessages + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.HasPublicMessages; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.HasReservePrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.HasReservePrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.HasUnansweredQuestions + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.HasUnansweredQuestions; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.MinimumBestOfferPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.MinimumBestOfferPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.RelistedItemID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.RelistedItemID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.SecondChanceOriginalItemID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.SecondChanceOriginalItemID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.StartTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.StartTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.TCROriginalItemID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.TCROriginalItemID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.ViewItemURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.ViewItemURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDetails.ViewItemURLForNaturalSearch + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ListingDetails != null) addContent = addContent + "," + fetchedItem.ListingDetails.ViewItemURLForNaturalSearch; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingDuration + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ListingDuration; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingEnhancement + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ListingEnhancement; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingSubtype + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ListingSubtype; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ListingType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ListingType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Location + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Location; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .LocationDefaulted + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.LocationDefaulted; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .LotSize + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.LotSize; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .MechanicalCheckAccepted + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.MechanicalCheckAccepted; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .MotorsGermanySearchable + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.MotorsGermanySearchable; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .OutOfStockControl + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.OutOfStockControl; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentAllowedSite + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PaymentAllowedSite; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentDetails.DaysToFullPayment + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PaymentDetails != null) addContent = addContent + "," + fetchedItem.PaymentDetails.DaysToFullPayment; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentDetails.DepositAmount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PaymentDetails != null) addContent = addContent + "," + fetchedItem.PaymentDetails.DepositAmount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentDetails.DepositType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PaymentDetails != null) addContent = addContent + "," + fetchedItem.PaymentDetails.DepositType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentDetails.HoursToDeposit + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PaymentDetails != null) addContent = addContent + "," + fetchedItem.PaymentDetails.HoursToDeposit; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PaymentMethods + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PaymentMethods; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); }
/*
// Save individual Payment Method
var payMethods = fetchedItem.PaymentMethods.ToArray();
for (int i = 0; payMethods != null & i < fetchedItem.PaymentMethods.Count; i++)
{
    Console.WriteLine("    Payment Method " + i + " : " + payMethods[i].ToString());
    using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Payment Method " + i + " : " + payMethods[i].ToString());

    using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PayMethod" + i + " + "); try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PaymentMethods; else addContent = addContent + ","; }
    catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); }

}
*/

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PayPalEmailAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PayPalEmailAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PickupInStoreDetails.EligibleForPickupInStore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PickupInStoreDetails != null) addContent = addContent + "," + fetchedItem.PickupInStoreDetails.EligibleForPickupInStore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.ExternalPictureURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.ExternalPictureURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.GalleryDuration + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.GalleryDuration; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.GalleryErrorInfo + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.GalleryErrorInfo; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.GalleryStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.GalleryStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.GalleryType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.GalleryType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.GalleryURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.GalleryURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.PhotoDisplay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.PhotoDisplay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.PictureSource + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.PictureSource; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PictureDetails.PictureURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PictureDetails != null) addContent = addContent + "," + fetchedItem.PictureDetails.PictureURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PostalCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PostalCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PostCheckoutExperienceEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PostCheckoutExperienceEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PrimaryCategory.CategoryID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PrimaryCategory != null) addContent = addContent + "," + fetchedItem.PrimaryCategory.CategoryID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PrimaryCategory.CategoryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.PrimaryCategory != null) addContent = addContent + "," + fetchedItem.PrimaryCategory.CategoryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .PrivateListing + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.PrivateListing; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 





using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.Copyright + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.Copyright; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.EAN + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.EAN; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.IncludePrefilledItemInformation + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.IncludePrefilledItemInformation; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.IncludeStockPhotoURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.IncludeStockPhotoURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.ISBN + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.ISBN; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.ProductID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.ProductID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.StockPhotoURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.StockPhotoURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.UPC + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.UPC; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProductListingDetails.UseStockPhotoURLAsGallery + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ProductListingDetails != null) addContent = addContent + "," + fetchedItem.ProductListingDetails.UseStockPhotoURLAsGallery; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ProxyItem + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ProxyItem; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Quantity + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Quantity; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .QuantityAvailableHint + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.QuantityAvailableHint; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .QuantityInfo.MinimumRemnantSet + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.QuantityInfo != null) addContent = addContent + "," + fetchedItem.QuantityInfo.MinimumRemnantSet; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .QuantityThreshold + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.QuantityThreshold; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReasonHideFromSearch + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ReasonHideFromSearch; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .RelistParentID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.RelistParentID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReservePrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ReservePrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.Description + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.Description; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.EAN + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.EAN; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.Refund + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.Refund; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.RefundOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.RefundOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.RestockingFeeValue + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.RestockingFeeValue; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.RestockingFeeValueOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.RestockingFeeValueOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ReturnsAccepted + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ReturnsAccepted; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ReturnsAcceptedOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ReturnsAcceptedOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ReturnsWithin + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ReturnsWithin; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ReturnsWithinOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ReturnsWithinOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ShippingCostPaidBy + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ShippingCostPaidBy; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.ShippingCostPaidByOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.ShippingCostPaidByOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyDuration + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyDuration; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyDurationOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyDurationOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyOffered + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyOffered; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyOfferedOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyOfferedOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReturnPolicy.WarrantyTypeOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReturnPolicy != null) addContent = addContent + "," + fetchedItem.ReturnPolicy.WarrantyTypeOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReviseStatus.BuyItNowAdded + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReviseStatus != null) addContent = addContent + "," + fetchedItem.ReviseStatus.BuyItNowAdded; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReviseStatus.BuyItNowLowered + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReviseStatus != null) addContent = addContent + "," + fetchedItem.ReviseStatus.BuyItNowLowered; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReviseStatus.ItemRevised + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReviseStatus != null) addContent = addContent + "," + fetchedItem.ReviseStatus.ItemRevised; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReviseStatus.ReserveLowered + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReviseStatus != null) addContent = addContent + "," + fetchedItem.ReviseStatus.ReserveLowered; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ReviseStatus.ReserveRemoved + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ReviseStatus != null) addContent = addContent + "," + fetchedItem.ReviseStatus.ReserveRemoved; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SecondaryCategory.CategoryID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SecondaryCategory != null) addContent = addContent + "," + fetchedItem.SecondaryCategory.CategoryID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SecondaryCategory.CategoryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SecondaryCategory != null) addContent = addContent + "," + fetchedItem.SecondaryCategory.CategoryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.AboutMePage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.AboutMePage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.eBayGoodStanding + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.eBayGoodStanding; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.Email + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.Email; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.FeedbackPrivate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.FeedbackPrivate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.FeedbackRatingStar + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.FeedbackRatingStar; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.FeedbackScore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.FeedbackScore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.IDVerified + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.IDVerified; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.MotorsDealer + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.MotorsDealer; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.NewUser + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.NewUser; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.PositiveFeedbackPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.PositiveFeedbackPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.CityName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.CityName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Country + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Country; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.CountryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.CountryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.FirstName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.FirstName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.LastName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.LastName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Phone + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Phone; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.PostalCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.PostalCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.RegistrationDate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.RegistrationDate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.AllowPaymentEdit + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.AllowPaymentEdit; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.CheckoutEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.CheckoutEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.CIPBankAccountStored + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.CIPBankAccountStored; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.GoodStanding + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.GoodStanding; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.MerchandizingPref + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.MerchandizingPref; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.QualifiesForBBVAT + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.QualifiesForBBVAT; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SafePaymentExempt + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SafePaymentExempt; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellerBusinessType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellerBusinessType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.PayoutMethod + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.PayoutMethod; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.PayoutMethodSet + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.PayoutMethodSet; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.AcceptedTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.AcceptedTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.SellereBayPaymentProcessEnableTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.SellereBayPaymentProcessEnableTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.SellereBayPaymentProcessStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.SellereBayPaymentProcessStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.Site + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.Site; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.UserAgreementURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessConsent.UserAgreementInfo.UserAgreementURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 



using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellereBayPaymentProcessStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellereBayPaymentProcessStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.SellerLevel + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.SellerLevel; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.StoreOwner + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.StoreOwner; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.StoreURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.StoreURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.SellerInfo.TopRatedSeller + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller.SellerInfo != null) addContent = addContent + "," + fetchedItem.Seller.SellerInfo.TopRatedSeller; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.Site + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.Site; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.Status + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.Status; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.UserID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.UserID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.UserIDChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.UserIDChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.UserIDLastChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.UserIDLastChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Seller.VATStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Seller != null) addContent = addContent + "," + fetchedItem.Seller.VATStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.CompanyName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.CompanyName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.County + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.County; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.FirstName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.FirstName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.LastName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.LastName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneAreaOrCityCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneAreaOrCityCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneCountryCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneCountryCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneCountryPrefix + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneCountryPrefix; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneLocalNumber + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneLocalNumber; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneAreaOrCityCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneAreaOrCityCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneCountryCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneCountryCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneCountryPrefix + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneCountryPrefix; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.PhoneLocalNumber + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.PhoneLocalNumber; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerContactDetails.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellerContactDetails != null) addContent = addContent + "," + fetchedItem.SellerContactDetails.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 















using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerProvidedTitle + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SellerProvidedTitle; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellerVacationNote + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SellerVacationNote; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.AdminEnded + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.AdminEnded; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.BidCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.BidCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.BidIncrement + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.BidIncrement; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.ConvertedCurrentPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.ConvertedCurrentPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.CurrentPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.CurrentPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.AboutMePage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.AboutMePage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 








using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.eBayGoodStanding + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.eBayGoodStanding; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.Email + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.Email; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.FeedbackPrivate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.FeedbackPrivate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.FeedbackRatingStar + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.FeedbackRatingStar; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.FeedbackScore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.FeedbackScore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.IDVerified + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.IDVerified; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.NewUser + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.NewUser; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.PositiveFeedbackPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.PositiveFeedbackPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.CityName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.CityName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Country + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Country; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.CountryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.CountryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.FirstName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.FirstName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.LastName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.LastName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Phone + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Phone; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.PostalCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.PostalCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationAddress.Street + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder.RegistrationAddress != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationAddress.Street; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.RegistrationDate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.RegistrationDate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.Site + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.Site; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.Status + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.Status; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.UserAnonymized + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.UserAnonymized; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.UserID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.UserID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.UserIDChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.UserIDChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.UserIDLastChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.UserIDLastChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.HighBidder.VATStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.SellingStatus.HighBidder.VATStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.LeadCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.LeadCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.ListingStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.ListingStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.MinimumToBid + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.MinimumToBid; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.PromotionalSaleDetails.EndTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.SellingStatus.PromotionalSaleDetails.EndTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.PromotionalSaleDetails.OriginalPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.SellingStatus.PromotionalSaleDetails.OriginalPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.PromotionalSaleDetails.StartTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.SellingStatus.PromotionalSaleDetails.StartTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.QuantitySold + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.QuantitySold; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.QuantitySoldByPickupInStore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.QuantitySoldByPickupInStore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.ReserveMet + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.ReserveMet; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.SecondChanceEligible + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.SecondChanceEligible; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SellingStatus.SoldAsBin + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.SellingStatus != null) addContent = addContent + "," + fetchedItem.SellingStatus.SoldAsBin; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.AllowPaymentEdit + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.AllowPaymentEdit; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingDiscount.DiscountName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingDiscount != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingDiscount.DiscountProfile.DiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile.DiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingDiscount.DiscountProfile.DiscountProfileName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile.DiscountProfileName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingDiscount.DiscountProfile.MappedDiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile.MappedDiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingDiscount.DiscountProfile.WeightOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingDiscount.DiscountProfile.WeightOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 




using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.InternationalPackagingHandlingCosts + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.InternationalPackagingHandlingCosts; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.OriginatingPostalCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.OriginatingPostalCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.PackageDepth + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.PackageDepth; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.PackageLength + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.PackageLength; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.PackageWidth + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.PackageWidth; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.PackagingHandlingCosts + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.PackagingHandlingCosts; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.ShippingIrregular + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.ShippingIrregular; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.ShippingPackage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.ShippingPackage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.WeightMajor + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.WeightMajor; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CalculatedShippingRate.WeightMinor + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.CalculatedShippingRate != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CalculatedShippingRate.WeightMinor; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.CODCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.CODCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ExcludeShipToLocation + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ExcludeShipToLocation; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountProfile.DiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile.DiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountProfile.DiscountProfileName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile.DiscountProfileName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalAmount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalAmount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalAmountOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalAmountOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalPercentOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.FlatShippingDiscount.DiscountProfile.EachAdditionalPercentOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 



using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.GetItFast + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.GetItFast; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.GlobalShipping + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.GlobalShipping; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InsuranceDetails.InsuranceFee + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InsuranceDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InsuranceDetails.InsuranceFee; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InsuranceDetails.InsuranceOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InsuranceDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InsuranceDetails.InsuranceOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InsuranceFee + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InsuranceFee; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InsuranceOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InsuranceOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalCalculatedShippingDiscount.DiscountName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.DiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.DiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.DiscountProfileName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.DiscountProfileName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.MappedDiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.MappedDiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.WeightOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalCalculatedShippingDiscount.DiscountProfile.WeightOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 




using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.DiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.DiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.DiscountProfileName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.DiscountProfileName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalAmount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalAmount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalAmountOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalAmountOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalPercentOff + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalFlatShippingDiscount.DiscountProfile.EachAdditionalPercentOff; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 




using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalInsuranceDetails.InsuranceFee + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalInsuranceDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalInsuranceDetails.InsuranceFee; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalInsuranceDetails.InsuranceOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalInsuranceDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalInsuranceDetails.InsuranceOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalPromotionalShippingDiscount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalPromotionalShippingDiscount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingDiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingDiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingServiceOption.ShippingService + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalShippingServiceOption != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingServiceOption.ShippingService; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingServiceOption.ShippingServiceAdditionalCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalShippingServiceOption != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingServiceOption.ShippingServiceAdditionalCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingServiceOption.ShippingServiceCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalShippingServiceOption != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingServiceOption.ShippingServiceCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingServiceOption.ShippingServicePriority + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalShippingServiceOption != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingServiceOption.ShippingServicePriority; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.InternationalShippingServiceOption.ShipToLocation + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.InternationalShippingServiceOption != null) addContent = addContent + "," + fetchedItem.ShippingDetails.InternationalShippingServiceOption.ShipToLocation; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 



using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PaymentInstructions + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PaymentInstructions; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PromotionalShippingDiscount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PromotionalShippingDiscount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PromotionalShippingDiscountDetails.DiscountName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails.DiscountName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PromotionalShippingDiscountDetails.ItemCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails.ItemCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PromotionalShippingDiscountDetails.OrderAmount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails.OrderAmount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.PromotionalShippingDiscountDetails.ShippingCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.PromotionalShippingDiscountDetails.ShippingCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.RateTableDetails.DomesticRateTable + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.RateTableDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.RateTableDetails.DomesticRateTable; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.RateTableDetails.InternationalRateTable + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.RateTableDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.RateTableDetails.InternationalRateTable; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.SalesTax.SalesTaxPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.SalesTax != null) addContent = addContent + "," + fetchedItem.ShippingDetails.SalesTax.SalesTaxPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.SalesTax.SalesTaxState + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.SalesTax != null) addContent = addContent + "," + fetchedItem.ShippingDetails.SalesTax.SalesTaxState; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.SalesTax.ShippingIncludedInTax + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.SalesTax != null) addContent = addContent + "," + fetchedItem.ShippingDetails.SalesTax.ShippingIncludedInTax; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.SellerExcludeShipToLocationsPreference + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.SellerExcludeShipToLocationsPreference; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingDiscountProfileID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingDiscountProfileID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ExpeditedService + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ExpeditedService; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.FreeShipping + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.FreeShipping; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.LogisticPlanType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.LogisticPlanType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingService + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingService; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingServiceAdditionalCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingServiceAdditionalCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingServiceCost + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingServiceCost; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingServicePriority + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingServicePriority; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingSurcharge + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingSurcharge; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingTimeMax + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingTimeMax; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingServiceOptions.ShippingTimeMin + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.ShippingServiceOptions != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingServiceOptions.ShippingTimeMin; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ShippingType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ShippingType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.TaxTable.TaxJurisdiction.JurisdictionID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction != null) addContent = addContent + "," + fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction.JurisdictionID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.TaxTable.TaxJurisdiction.SalesTaxPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction != null) addContent = addContent + "," + fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction.SalesTaxPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.TaxTable.TaxJurisdiction.ShippingIncludedInTax + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction != null) addContent = addContent + "," + fetchedItem.ShippingDetails.TaxTable.TaxJurisdiction.ShippingIncludedInTax; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 



using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingDetails.ThirdPartyCheckout + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingDetails != null) addContent = addContent + "," + fetchedItem.ShippingDetails.ThirdPartyCheckout; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.PackageDepth + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.PackageDepth; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.PackageLength + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.PackageLength; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.PackageWidth + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.PackageWidth; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.ShippingIrregular + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.ShippingIrregular; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.ShippingPackage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.ShippingPackage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.WeightMajor + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.WeightMajor; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingPackageDetails.WeightMinor + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ShippingPackageDetails != null) addContent = addContent + "," + fetchedItem.ShippingPackageDetails.WeightMinor; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShippingTermsInDescription + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShippingTermsInDescription; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShipToLocations + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShipToLocations; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Site + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Site; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SKU + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SKU; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SkypeContactOption + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SkypeContactOption; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SkypeEnabled + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SkypeEnabled; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SkypeID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SkypeID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .StartPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.StartPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Storefront.StoreCategoryID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Storefront != null) addContent = addContent + "," + fetchedItem.Storefront.StoreCategoryID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Storefront.StoreCategoryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Storefront != null) addContent = addContent + "," + fetchedItem.Storefront.StoreCategoryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Storefront.StoreCategoryID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Storefront != null) addContent = addContent + "," + fetchedItem.Storefront.StoreCategoryID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Storefront.StoreCategoryName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Storefront != null) addContent = addContent + "," + fetchedItem.Storefront.StoreCategoryName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Storefront.StoreURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Storefront != null) addContent = addContent + "," + fetchedItem.Storefront.StoreURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SubTitle + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SubTitle; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .TaxCategory + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.TaxCategory; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .TimeLeft + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.TimeLeft; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Title + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.Title; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .TopRatedListing + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.TopRatedListing; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .UnitInfo.UnitQuantity + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.UnitInfo != null) addContent = addContent + "," + fetchedItem.UnitInfo.UnitQuantity; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .UnitInfo.UnitType + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.UnitInfo != null) addContent = addContent + "," + fetchedItem.UnitInfo.UnitType; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .UUID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.UUID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Pictures.VariationSpecificName + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Pictures != null) addContent = addContent + "," + fetchedItem.Variations.Pictures.VariationSpecificName; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Pictures.VariationSpecificPictureSet.ExternalPictureURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Pictures.VariationSpecificPictureSet != null) addContent = addContent + "," + fetchedItem.Variations.Pictures.VariationSpecificPictureSet.ExternalPictureURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Pictures.VariationSpecificPictureSet.PictureURL + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Pictures.VariationSpecificPictureSet != null) addContent = addContent + "," + fetchedItem.Variations.Pictures.VariationSpecificPictureSet.PictureURL; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Pictures.VariationSpecificPictureSet.VariationSpecificValue + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Pictures.VariationSpecificPictureSet != null) addContent = addContent + "," + fetchedItem.Variations.Pictures.VariationSpecificPictureSet.VariationSpecificValue; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 





//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.MadeForOutletComparisonPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.MadeForOutletComparisonPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.MinimumAdvertisedPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.MinimumAdvertisedPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.MinimumAdvertisedPriceExposure + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.MinimumAdvertisedPriceExposure; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.OriginalRetailPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.OriginalRetailPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.PricingTreatment + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.PricingTreatment; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.SoldOffeBay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.SoldOffeBay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.DiscountPriceInfo.SoldOneBay + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.DiscountPriceInfo != null) addContent = addContent + "," + fetchedItem.Variations.Variation.DiscountPriceInfo.SoldOneBay; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.Quantity + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation != null) addContent = addContent + "," + fetchedItem.Variations.Variation.Quantity; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.AdminEnded + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.AdminEnded; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.BidCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.BidCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.BidIncrement + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.BidIncrement; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.ConvertedCurrentPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.ConvertedCurrentPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.CurrentPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.CurrentPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.AboutMePage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.AboutMePage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.BuyerInfo + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.BuyerInfo; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.BuyerInfo + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.BuyerInfo; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.BuyerInfo + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.BuyerInfo; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.BuyerInfo + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.BuyerInfo; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.eBayGoodStanding + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.eBayGoodStanding; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.Email + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.Email; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.FeedbackPrivate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.FeedbackPrivate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.FeedbackRatingStar + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.FeedbackRatingStar; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.FeedbackScore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.FeedbackScore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.IDVerified + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.IDVerified; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.NewUser + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.NewUser; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.PositiveFeedbackPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.PositiveFeedbackPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationAddress + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationAddress; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.RegistrationDate + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.RegistrationDate; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.Site + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.Site; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.Status + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.Status; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.UserAnonymized + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.UserAnonymized; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.UserID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.UserID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.UserIDChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.UserIDChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.UserIDLastChanged + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.UserIDLastChanged; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.HighBidder.VATStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.HighBidder != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.HighBidder.VATStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.LeadCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.LeadCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.ListingStatus + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.ListingStatus; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.MinimumToBid + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.MinimumToBid; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.PromotionalSaleDetails.EndTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails.EndTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.PromotionalSaleDetails.OriginalPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails.OriginalPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.PromotionalSaleDetails.StartTime + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.PromotionalSaleDetails.StartTime; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.QuantitySold + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.QuantitySold; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.QuantitySoldByPickupInStore + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.QuantitySoldByPickupInStore; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.ReserveMet + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.ReserveMet; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.SecondChanceEligible + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.SecondChanceEligible; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SellingStatus.SoldAsBin + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.SellingStatus != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SellingStatus.SoldAsBin; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.SKU + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation != null) addContent = addContent + "," + fetchedItem.Variations.Variation.SKU; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.StartPrice + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation != null) addContent = addContent + "," + fetchedItem.Variations.Variation.StartPrice; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.VariationSpecifics.NameValueList.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.VariationSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.Variation.VariationSpecifics.NameValueList.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.VariationSpecifics.NameValueList.Source + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.VariationSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.Variation.VariationSpecifics.NameValueList.Source; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.Variation.VariationSpecifics.NameValueList.Value + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.Variation.VariationSpecifics.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.Variation.VariationSpecifics.NameValueList.Value; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 









//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.VariationSpecificsSet.NameValueList.Name + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.VariationSpecificsSet.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.VariationSpecificsSet.NameValueList.Name; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.VariationSpecificsSet.NameValueList.Source + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.VariationSpecificsSet.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.VariationSpecificsSet.NameValueList.Source; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .Variations.VariationSpecificsSet.NameValueList.Value + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.Variations.VariationSpecificsSet.NameValueList != null) addContent = addContent + "," + fetchedItem.Variations.VariationSpecificsSet.NameValueList.Value; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 






using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VATDetails.BusinessSeller + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.VATDetails != null) addContent = addContent + "," + fetchedItem.VATDetails.BusinessSeller; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VATDetails.RestrictedToBusiness + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.VATDetails != null) addContent = addContent + "," + fetchedItem.VATDetails.RestrictedToBusiness; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VATDetails.VATID + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.VATDetails != null) addContent = addContent + "," + fetchedItem.VATDetails.VATID; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VATDetails.VATPercent + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.VATDetails != null) addContent = addContent + "," + fetchedItem.VATDetails.VATPercent; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VATDetails.VATSite + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.VATDetails != null) addContent = addContent + "," + fetchedItem.VATDetails.VATSite; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VIN + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.VIN; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VINLink + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.VINLink; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VRM + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.VRM; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .VRMLink + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.VRMLink; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .WatchCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.WatchCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .WatchCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.WatchCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .WatchCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.WatchCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .WatchCount + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.WatchCount; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ErrorClassification + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ErrorClassification; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ErrorCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ErrorCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 

//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ErrorParameters.Value + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem.ErrorParameters != null) addContent = addContent + "," + fetchedItem.ErrorParameters.Value; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .LongMessage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.LongMessage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .SeverityCode + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.SeverityCode; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShortMessage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShortMessage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShortMessage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShortMessage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShortMessage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShortMessage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 
//using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(" + .ShortMessage + " ) ;             try { Context.CallRetry = GetCallRetry(); GetItemCall apicall = new GetItemCall(GetContext()); apicall.DetailLevelList.Add(DetailLevelCodeType.ReturnAll); apicall.IncludeItemSpecifics = true; fetchedItem = apicall.GetItem(ItemString); if (fetchedItem != null) addContent = addContent + "," + fetchedItem.ShortMessage; else addContent = addContent + ","; } catch (Exception ex) { using (StreamWriter sw = File.AppendText(pathItem)) sw.WriteLine(ex.Message); } 


        }

        private void BtnChangeIsInPanel(object sender, RoutedEventArgs e)
        {

            eBayFetchSQLEntities dbContext = new eBayFetchSQLEntities();
            ObjectQuery<S1SearchTable> listings = dbContext.S1SearchTable;

            var query = from listing in dbContext.S1SearchTable
                        group listing by listing.ItemID into g
                        where g.Count() > 1
                        select new
                        {
                            DuplicateItemID = g.Key,
                            DupSearchID = g.Min(listing => listing.SearchID)
                        };

            List<int> DupList = new List<int>();
            foreach (var listin in query)
            {
                DupList.Add(listin.DupSearchID);
            }

            foreach (int rowNum in DupList)
            {
                Log("Now deleting Search ID = " + rowNum.ToString() + ", in S1TableResult");
                DelS1Row(rowNum);
            }

        }
    }
}
